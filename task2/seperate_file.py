# CAPP 30123: FINAL PROJECT
# Group: On-Fire
# Author: Xingyun Wu

# This file is used to seperate the large datafile generated by the first
#   MapReduce into smaller bins, in order to reduce complexity of computation.

# Change values of the two "if"s to extract corresponding records.

import os
from mrjob.job import MRJob
from datetime import datetime
from datetime import date

dir_path = os.path.dirname(os.path.realpath(__file__))

# After running this MapReduce, in shell, sort the records in the output file using:
#    (e.g.) sort -k 4,4 -k 1,1 -k 2,2 2006_down.txt > 2006_down_sorted.txt

class GetPair(MRJob):
    
    
    def mapper(self, _, line):
        fields = line.split(',')
        
        lat = fields[0].strip('["')
        lat = float(lat)
        lon = fields[1].strip(' "]')
        lon = float(lon)
        infos = fields[2].split(']')
        r_date = datetime.strptime(infos[0].strip('"').\
                                    strip(' "'),'%Y-%m-%d').date()
        f_date = (r_date - date(2006,1,1)).days
        r_date = r_date.isoformat()
        d_temp = fields[3].strip(' "[')
        d_temp = float(d_temp)
        wind_dir = fields[4].strip(' "]\n')
        wind_dir = int(float(wind_dir))
        if f_date >= 0 and f_date < 365:
            if d_temp >= 0:
                yield (lat, lon, r_date, f_date, d_temp, wind_dir), 1


if __name__ == '__main__':
    GetPair.run()